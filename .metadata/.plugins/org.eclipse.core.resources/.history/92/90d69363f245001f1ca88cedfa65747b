/*
 * msp.c
 *
 *  Created on: Jul 12, 2024
 *      Author: Ayuba Tahiru
 */




#include "stm32f4xx_hal.h"


void HAL_MspInit(void){
/********************* HANDLE LOW LEVEL PROCESSOR SPECIFIC INITS *******************
   * 1. Setup grouping of ARM-CORTEX Mx Processor
   * 2. Enable required system exceptions of the ARM-CORTEX Mx Processor
   * 3.	Configure priority for system exceptions*/

	// 1. Setup grouping
	HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);

	// 2. Enable required system exceptions
	SCB->SHCSR |= 0x7 << 16; // usage fault, memory fault and bus fault

	// 3. Configure priority for system exceptions
	HAL_NVIC_SetPriority(MemoryManagement_IRQn,0, 0);
	HAL_NVIC_SetPriority(BusFault_IRQn, 0, 0);
	HAL_NVIC_SetPriority(UsageFault_IRQn, 0, 0);

}

void HAL_TIM_IC_MspInit(TIM_HandleTypeDef *htim){
/********************* HANDLE LOW LEVEL INITIALIZATION OF TIMER 2*******************
	   * 1. Enable Timer2 Clock
	   * 2. Configuring a GPIO to behave as Timer2 Channel 1
	   * 3.	NVIC Settings*/
	GPIO_InitTypeDef timer2_Channel1;
	// 1. Enable Timer2 Clock
	__HAL_RCC_TIM2_CLK_ENABLE();
	__HAL_RCC_GPIOA_CLK_ENABLE();

	// 2. ALternate function configuration: By configuring a GPIO to behave as Timer2 Channel 1

	timer2_Channel1.Pin = GPIO_PIN_8;
	timer2_Channel1.Mode = GPIO_MODE_AF_PP;
	timer2_Channel1.Alternate = GPIO_AF1_TIM2;
	HAL_GPIO_Init(GPIOA, &timer2_Channel1);

	// NVIC Settings
	HAL_NVIC_SetPriority(TIM2_IRQn, 15, 0);
	HAL_NVIC_EnableIRQ(TIM2_IRQn);
}
